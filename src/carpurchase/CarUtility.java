/*carutility class for performing all the functionalities of admin class
 * Validation are not applied at all the places
 */
package carpurchase;
import java.util.ArrayList;
import java.util.Random;
import java.util.Collections;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Comparator;
import java.util.InputMismatchException;
public class CarUtility {
	//an arraylist for the customer 
			ArrayList<Customer> customer=new ArrayList<Customer>();
	       //scanner for taking the input from the user
			Scanner scanner = new Scanner(System.in);
			//comparator interface to compare among two objects and sort on the basis of name using compare method
			Comparator<Customer> comparator=new Comparator<Customer>() {
				 public int compare(Customer customer1, Customer customer2)
				{
					return customer1.getName().compareTo(customer2.getName());
				}
			
			};
			//method to validate the customer id
			public boolean validateId(String id)
			{
				String regex="[+-]?[0-9][0-9]*";
				Pattern pattern=Pattern.compile(regex,Pattern.CASE_INSENSITIVE);
				Matcher matcher=pattern.matcher(id);
				return matcher.find();
			}
			//method to validate the customer name
			public boolean validateName(String name)
			{
				String regex="^[a-zA-Z\\s]+$";
				Pattern pattern=Pattern.compile(regex,Pattern.CASE_INSENSITIVE);
				Matcher matcher=pattern.matcher(name);
				return matcher.find();
			}
			//method to add the customer
			public void addCustomer()
			{
				
				String id ;
				String name = null;
				System.out.println("Enter the id of the customer");
			    id=scanner.next();
			    if(!validateId(id))
				{
			    	System.out.print("Entered id is not valid");
			    	return;
				}
			   
				System.out.println("\nEnter the name of the customer");
				name=scanner.next();
				 if(!validateName(name))
					{
				    	System.out.print("Entered id is not valid");
				    	return;
					}
				customer.add(new Customer(Integer.parseInt(id),name));
				System.out.println("Customer added");
			
			}
			//method to add the car
			public void addCar()
			{
				int id;
				System.out.println("Enter the customer id to add cars:");
				 id=scanner.nextInt();
				 for(Customer customer3 : customer) {
					 
					 
					 if(customer3.getId()==id) {
						System.out.println("Customer found"+" "+
					                       "\nId"+" "+customer3.getId()+" "+
								           "\nName"+" "+customer3.getName());
						customer3.getCarlist();
						break;
							
						}
				 }	 
					 
				 
			}
			//method to list the customers sorted by the name
			public void listCustomers()
			{
				int i;
				Collections.sort(customer, comparator);
				for(i=0;i<customer.size();i++)
				{
					System.out.println("Id"+" "+customer.get(i).getId()+" "+"Name"+" "+customer.get(i).getName());
				}
				
			}
			/*method to list the customers based on the individual id
			 *  it will search for the id in the Customer arraylist
			 *  if it finds the id, it will display the details of the customer including the car details of customer
			 *  and if the id is not found the control comes out from the if loop  
			 */
			public void listCustomersOnId()
			{
				
				System.out.println("Enter the id for the customer to search");
				int search=scanner.nextInt();
				for(Customer customer4 :customer) {
				if(customer4.getId()==search) {
					System.out.println("Customer found:\n"+""
				                        +"Id"+" "+customer4.getId()+" "
							            +"\nName"+" "+customer4.getName());
					customer4.printCarDetails();
					break;
					
				}
				}
			}
			/*method to generate the prize, admin will enter 3 id's
			 * and 6 random id's will be generated by using the rand function and if it
			 * matches with id's entered by the admin then  particular user will get the prize 
			 */
			public void generatePrize()
			{
				int k;
				System.out.println("Please enter 3 valid customer id");
				ArrayList<Integer> check=new ArrayList<Integer>();
				Random random=new Random();
				int randomnumber=random.nextInt(6);
				int randomid=customer.get(randomnumber).getId();
				for(k=0;k<3;k++)
				{
					check.add(scanner.nextInt());
					
				}
				for(k=0;k<6;k++)
				{
					
					System.out.println("Random"+randomid);
					int f=0;
					if(check.contains(randomid))
					{
						System.out.println("customer with id:"+randomid+"has won");
						check.remove(new Integer(randomid) );
					}
					else {
						f++;
					}
					if (f!=0) {
						System.out.println("This was not your day to won, try it better next time");
					}
					randomnumber=random.nextInt(6);
					randomid=customer.get(randomnumber).getId();
					
				}
			
			}
}
